import disnake

from datetime import datetime

from disnake import ModalInteraction

from db_config import execute_query
from db_config import read_query

from disnake.ext import commands

from defines_config import MARATHON_START_DATE
from defines_config import REG_MARATHON_CHAT_ID, MAIN_COMMUNICATION_MARATHON_CHAT_ID, PRACTISE_CHAT_ID
from defines_config import MARATHON_ROLE_ID, ORGANIZER_ROLE_ID, MODERATOR_ROLE_ID

from errors_handling import check_missing_role


class Marathon(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    # –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç–∞ –º–∞—Ä–∞—Ñ–æ–Ω–∞
    @commands.slash_command(name="marathon-start",
                            default_member_permissions=disnake.Permissions(mention_everyone=True))
    @commands.has_role(ORGANIZER_ROLE_ID)
    async def start_marathon(self, interaction: disnake.ApplicationCommandInteraction):
        marathon_channel = self.bot.get_channel(REG_MARATHON_CHAT_ID)

        welcome_view = WelcomeMarathonButton()  # —Ñ–æ—Ä–º–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        await marathon_channel.send("## –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –º–∞—Ä–∞—Ñ–æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞!\n"
                                    "–ó–∞ –¥–≤–µ –Ω–µ–¥–µ–ª–∏ –º–∞—Ä–∞—Ñ–æ–Ω–∞ –≤—ã:\n"
                                    "- —Ç–µ–∫—Å—Ç\n"
                                    "- —Ç–µ–∫—Å—Ç",
                                    view=welcome_view)
        await interaction.send("–û—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Ç–∞—Ä—Ç –º–∞—Ä–∞—Ñ–æ–Ω–∞")
        # await welcome_view.wait()

    # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –ø—Ä–∞–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã marathon-start
    @start_marathon.error
    async def start_marathon_error_handler(self, interaction: disnake.ApplicationCommandInteraction, error):
        await check_missing_role(interaction, error)


# TODO –Ω–µ —Å—Ä–æ—á–Ω–æ | —Å–¥–µ–ª–∞—Ç—å –≥—Ä–∞–º–æ—Ç–Ω–æ–µ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ (–≤ –¥–∏—Å–∫–æ—Ä–¥–µ —á—Ç–æ–± –¥–∞—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∞—Å—å)
# https://www.youtube.com/watch?v=5cl_2xAyG0w&list=PLcsmHdQZxRKB7b8zKb2-aq9j3y7pZkQmP&index=7
def get_time_until_start():
    now = datetime.now()
    remaining_time = MARATHON_START_DATE - now

    if remaining_time.total_seconds() < 0:
        return "`–ú–∞—Ä–∞—Ñ–æ–Ω —É–∂–µ –Ω–∞—á–∞–ª—Å—è!`"

    days, remainder = divmod(remaining_time.total_seconds(), 86400)
    hours, remainder = divmod(remainder, 3600)

    string = f"–ú–∞—Ä–∞—Ñ–æ–Ω –Ω–∞—á–Ω—ë—Ç—Å—è "
    if days % 10 == 1:
        string += f"`—á–µ—Ä–µ–∑ {int(days)} –¥–µ–Ω—å "
    elif days % 10 in [2, 3, 4]:
        string += f"`—á–µ—Ä–µ–∑ {int(days)} –¥–Ω—è "
    else:
        string += f"`—á–µ—Ä–µ–∑ {int(days)} –¥–Ω–µ–π "

    if hours % 10 == 1:
        string += f"{int(hours)} —á–∞—Å`"
    elif hours % 10 in [2, 3, 4]:
        string += f"{int(hours)} —á–∞—Å–∞`"
    else:
        string += f"{int(hours)} —á–∞—Å–æ–≤`"

    return string


# –≤—Å—Ç—Ä–µ—á–∞—é—â–µ–µ view –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –º–∞—Ä–∞—Ñ–æ–Ω–µ
class WelcomeMarathonButton(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(label="–ú–∞—Ä–∞—Ñ–æ–Ω –æ—Ç–¥—ã—Ö–∞", style=disnake.ButtonStyle.blurple, emoji="‚õµ")
    async def welcomeMarathonButton(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        time_until_start = get_time_until_start()
        received_user_data = read_query(f"SELECT * FROM users WHERE users.name = \"{inter.author.name}\"")
        if received_user_data:
            extra_reg_view = ExtraRegMarathonButton()
            await inter.response.send_message(f"## –ú–∞—Ä–∞—Ñ–æ–Ω –æ—Ç–¥—ã—Ö–∞\n"
                                              f"{time_until_start}", view=extra_reg_view,
                                              ephemeral=True)
        else:
            reg_view = RegMarathonButton()
            await inter.response.send_message(f"## –ú–∞—Ä–∞—Ñ–æ–Ω –æ—Ç–¥—ã—Ö–∞\n"
                                              f"{time_until_start}", view=reg_view,
                                              ephemeral=True)

    @disnake.ui.button(label="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", style=disnake.ButtonStyle.gray, emoji="‚ùì")
    async def askQuestionButton(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        ask_question_modal = AskQuestionModal()
        await interaction.response.send_modal(ask_question_modal)


class AskQuestionModal(disnake.ui.Modal):
    def __init__(self):
        components = [
            disnake.ui.TextInput(label="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å", max_length=2000, custom_id="question_text")
        ]
        super().__init__(title="–í–æ–ø—Ä–æ—Å –æ –º–∞—Ä–∞—Ñ–æ–Ω–µ", components=components, custom_id="ask_question_modal")

    async def callback(self, interaction: ModalInteraction):
        channel = interaction.channel
        question_thread = await channel.create_thread(name="–í–æ–ø—Ä–æ—Å –æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞",
                                                      type=disnake.ChannelType.private_thread,
                                                      invitable=False, auto_archive_duration=4320)

        question_text = interaction.text_values["question_text"]
        moderator_role = interaction.guild.get_role(MODERATOR_ROLE_ID)
        organizer_role = interaction.guild.get_role(ORGANIZER_ROLE_ID)
        await question_thread.send(f"### –í–æ–ø—Ä–æ—Å –æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ {interaction.author.mention}\n\n"
                                   f"{question_text}\n\n"
                                   f"`{moderator_role.mention} {organizer_role.mention}` –£–±—Ä–∞–ª —Ç–µ–≥–∏ :)")

        await interaction.response.defer(with_message=False)


# —à–∞–±–ª–æ–Ω –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ view –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —É—á–∞—Å—Ç–∏—è
async def choice_format_pattern(inter: disnake.MessageInteraction):
    choice_format_view = ChoiceFormatMarathonButton()
    choice_format_embed = disnake.Embed(
        title="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —É—á–∞—Å—Ç–∏—è –Ω–∞ –≤–µ—Å—å –º–∞—Ä–∞—Ñ–æ–Ω",
        description="—Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç\n"
                    "—Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç\n"
                    "—Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç\n"
                    "—Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç\n"
                    "—Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç\n"
                    "—Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç\n",
        color=0x7aefb0
    )
    await inter.response.edit_message("", view=choice_format_view, embed=choice_format_embed)


# view –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class ExtraRegMarathonButton(disnake.ui.View):
    def __init__(self):
        super().__init__()
        if get_time_until_start() == "`–ú–∞—Ä–∞—Ñ–æ–Ω —É–∂–µ –Ω–∞—á–∞–ª—Å—è!`":
            self.extraRegMarathonButton.disabled = True

    @disnake.ui.button(label="–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ", style=disnake.ButtonStyle.red, emoji="üñä")
    async def extraRegMarathonButton(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        # —É–¥–∞–ª—è–µ–º –∏–∑ –ë–î —É—á–∞—Å—Ç–Ω–∏–∫–∞
        execute_query(f"DELETE FROM users WHERE users.name = \"{inter.author.name}\"")
        # –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —É–¥–∞–ª—è–µ–º —Ä–æ–ª—å —Å—Ä–∞–∑—É
        guild = inter.user.guild
        role = guild.get_role(MARATHON_ROLE_ID)
        await inter.author.remove_roles(role)

        await choice_format_pattern(inter)
        self.stop()


# view —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class RegMarathonButton(disnake.ui.View):
    def __init__(self):
        super().__init__()

    @disnake.ui.button(label="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –º–∞—Ä–∞—Ñ–æ–Ω", style=disnake.ButtonStyle.green, emoji="üñä")
    async def regMarathonButton(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await choice_format_pattern(inter)
        # TODO –Ω–µ —Å—Ä–æ—á–Ω–æ | –ø–æ—Å–ª–µ 3—Ö –º–∏–Ω—É—Ç ephemeral —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º (–∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
        # –Ω–∞–¥–æ –ª–∏–±–æ —É–¥–∞–ª–µ–Ω–∏–µ ephemeral —Å–æ–æ–±—â–µ–Ω–∏—è —Å–¥–µ–ª–∞—Ç—å, –ª–∏–±–æ —Ç–∞–∫, —á—Ç–æ–± –∫–Ω–æ–ø–∫–∞ —Ä–∞–±–æ—Ç–∞–ª–∞

    # async def on_timeout(self):


# view –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –º–∞—Ä–∞—Ñ–æ–Ω–∞ (–∫–æ–º–∞–Ω–¥–∞/—Å–æ–ª–æ)
class ChoiceFormatMarathonButton(disnake.ui.View):
    def __init__(self):
        super().__init__()
        if get_time_until_start() == "`–ú–∞—Ä–∞—Ñ–æ–Ω —É–∂–µ –Ω–∞—á–∞–ª—Å—è!`":
            self.team_button.disabled = True

    @disnake.ui.button(label="–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ", style=disnake.ButtonStyle.green, emoji="üèÜ")
    async def team_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        choice_timezone_view = TimezonesDropdownView()
        choice_format_embed = disnake.Embed(
            title="–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å",
            description="–ü–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ–¥–æ–±—Ä–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã —Ç–∞–∫, "
                        "—á—Ç–æ–±—ã —Å –Ω–∏–º–∏ –±—ã–ª–æ —É–¥–æ–±–Ω–æ –æ–±—â–∞—Ç—å—Å—è –≤ —á–∞—Ç–µ –∏ "
                        "–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–≤–æ–Ω—ã.",
            color=0xd1782c
        )
        await inter.response.edit_message("", view=choice_timezone_view, embed=choice_format_embed)
        self.stop()

    @disnake.ui.button(label="–°–≤–æ–±–æ–¥–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ", style=disnake.ButtonStyle.blurple, emoji="üìö")
    async def solo_button(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        successful_reg_embed = disnake.Embed(
            title="–¢–µ–ø–µ—Ä—å –≤—ã —É—á–∞—Å—Ç–Ω–∏–∫ –º–∞—Ä–∞—Ñ–æ–Ω–∞!",
            description=f"–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –º–∞—Ä–∞—Ñ–æ–Ω–∞ –≤ {interaction.guild.get_channel(PRACTISE_CHAT_ID).mention}. "
                        f"–í–∞–º –ø—Ä–∏–¥—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –≤—ã–π–¥–µ—Ç –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç —Å –∑–∞–¥–∞–Ω–∏—è–º–∏. –ü–æ–∫–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –æ —Ü–µ–ª—è—Ö "
                        f"–Ω–∞ –º–∞—Ä–∞—Ñ–æ–Ω –∏ –ø–æ–æ–±—â–∞–π—Ç–µ—Å—å —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –≤ "
                        f"{interaction.guild.get_channel(MAIN_COMMUNICATION_MARATHON_CHAT_ID).mention}",
            color=0x7aefb0
        )

        await give_role(interaction)

        execute_query(f"INSERT INTO users (name, team_id, is_leader) VALUES (\"{interaction.author.name}\", NULL, NULL);")
        await interaction.response.edit_message("", view=None, embed=successful_reg_embed)
        self.stop()


# –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ dropdown menu –¥–ª—è —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤
class TimezonesDropdown(disnake.ui.StringSelect):
    def __init__(self):
        options = [
            disnake.SelectOption(label="GMT-10 ~ –ì–æ–Ω–æ–ª—É–ª—É", emoji="üïô"),
            disnake.SelectOption(label="GMT-9 ~ –ê–Ω–∫–æ—Ä–∏–¥–∂, –§—ç—Ä–±–µ–Ω–∫—Å", emoji="üïò"),
            disnake.SelectOption(label="GMT-8 ~ –õ–æ—Å-–ê–Ω–¥–∂–µ–ª–µ—Å, –°–∞–Ω-–§—Ä–∞–Ω—Ü–∏—Å–∫–æ, –í–∞–Ω–∫—É–≤–µ—Ä", emoji="üïó"),
            disnake.SelectOption(label="GMT-7 ~ –§–∏–Ω–∏–∫—Å, –î–µ–Ω–≤–µ—Ä, –°–æ–ª—Ç-–õ–µ–π–∫-–°–∏—Ç–∏", emoji="üïñ"),
            disnake.SelectOption(label="GMT-6 ~ –ú–µ—Ö–∏–∫–æ, –ß–∏–∫–∞–≥–æ, –•—å—é—Å—Ç–æ–Ω", emoji="üïï"),
            disnake.SelectOption(label="GMT-5 ~ –ù—å—é-–ô–æ—Ä–∫, –¢–æ—Ä–æ–Ω—Ç–æ, –ú–æ–Ω—Ä–µ–∞–ª—å", emoji="üïî"),
            disnake.SelectOption(label="GMT-4 ~ –ö–∞—Ä–∞–∫–∞—Å, –°–∞–Ω—Ç—å—è–≥–æ, –ì–∞–≤–∞–Ω–∞", emoji="üïì"),
            disnake.SelectOption(label="GMT-3 ~ –ë—É—ç–Ω–æ—Å-–ê–π—Ä–µ—Å, –ú–æ–Ω—Ç–µ–≤–∏–¥–µ–æ, –°–∞–Ω-–ü–∞—É–ª—É", emoji="üïí"),
            disnake.SelectOption(label="GMT-2 ~ –°—Ä–µ–¥–Ω–∏–π –ê—Ç–ª–∞–Ω—Ç–∏–∫", emoji="üïë"),
            disnake.SelectOption(label="GMT-1 ~ –ê–∑–æ—Ä—Å–∫–∏–µ –æ—Å—Ç—Ä–æ–≤–∞, –ö–∞–±–æ-–í–µ—Ä–¥–µ", emoji="üïê"),
            disnake.SelectOption(label="GMT-0 ~ –õ–æ–Ω–¥–æ–Ω, –õ–∏—Å—Å–∞–±–æ–Ω, –î—É–±–ª–∏–Ω", emoji="üïõ"),
            disnake.SelectOption(label="GMT+1 ~ –ë–µ—Ä–ª–∏–Ω, –ü–∞—Ä–∏–∂", emoji="üïê"),
            disnake.SelectOption(label="GMT+2 ~ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥, –ö–∏–µ–≤, –í–∞—Ä—à–∞–≤–∞", emoji="üïë"),
            disnake.SelectOption(label="GMT+3 ~ –ú–æ—Å–∫–≤–∞, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", emoji="üïí"),
            disnake.SelectOption(label="GMT+4 ~ –î—É–±–∞–π, –ë–∞–∫—É, –ê–±—É-–î–∞–±–∏", emoji="üïì"),
            disnake.SelectOption(label="GMT+5 ~ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –¢–∞—à–∫–µ–Ω—Ç, –ê–ª–º–∞—Ç—ã", emoji="üïî"),
            disnake.SelectOption(label="GMT+6 ~ –û–º—Å–∫", emoji="üïï"),
            disnake.SelectOption(label="GMT+7 ~ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, –ë–∞–Ω–≥–∫–æ–∫, –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫", emoji="üïñ"),
            disnake.SelectOption(label="GMT+8 ~ –ò—Ä–∫—É—Ç—Å–∫, –£–ª–∞–Ω-–£–¥—ç", emoji="üïó"),
            disnake.SelectOption(label="GMT+9 ~ –ß–∏—Ç–∞, –¢–æ–∫–∏–æ, –°–µ—É–ª", emoji="üïò"),
            disnake.SelectOption(label="GMT+10 ~ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫, –°–∏–¥–Ω–µ–π", emoji="üïô"),
            disnake.SelectOption(label="GMT+11 ~ –°–∞—Ö–∞–ª–∏–Ω", emoji="üïö"),
            disnake.SelectOption(label="GMT+12 ~ –ö–∞–º—á–∞—Ç–∫–∞, –û–∫–ª–µ–Ω–¥", emoji="üïõ")
        ]

        super().__init__(
            placeholder="–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å",
            min_values=1,
            max_values=1,
            options=options
        )

    async def callback(self, inter: disnake.MessageInteraction):
        # TODO –Ω–µ —Å—Ä–æ—á–Ω–æ | –∫–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤–∑—è—Ç–∏–µ GMT –±–µ–∑ –∫–æ—Å—Ç—ã–ª–µ–π split -> –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ SelectOption –ø–∞—Ä–∞–º–µ—Ç—Ä value
        # —Ç–∏–ø–∞ disnake.SelectOption(label="GMT+12 ~ –ö–∞–º—á–∞—Ç–∫–∞, –û–∫–ª–µ–Ω–¥", value="12", emoji="üïõ"), –Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ
        choice_leader_position_view = ChoiceLeaderPositionMarathonButton(int(self.values[0].split()[0][3:6]))
        choice_leader_position_embed = disnake.Embed(
            title="–í—ã –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å –ª–∏–¥–µ—Ä–æ–º —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã",
            description="–¢–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç",
            color=0x5999c3
        )
        await inter.response.edit_message("", view=choice_leader_position_view,
                                          embed=choice_leader_position_embed)


# view –≤—ã–±–æ—Ä–∞ —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤
class TimezonesDropdownView(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(TimezonesDropdown())


async def give_role(interaction: disnake.MessageInteraction):
    guild = interaction.user.guild
    role = guild.get_role(MARATHON_ROLE_ID)
    await interaction.author.add_roles(role)  # –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã —Ä–æ–ª—å –±–æ—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ —Ä–æ–ª–µ–π –±—ã–ª–∞ –≤—ã—à–µ –º–∞—Ä–∞—Ñ–æ–Ω—Å–∫–æ–π —Ä–æ–ª–∏


# view –≤—ã–±–æ—Ä–∞ –ª–∏–¥–µ—Ä—Å–∫–æ–π –ø–æ–∑–∏—Ü–∏–∏ (–ª–∏–¥–µ—Ä/—É—á–∞—Å—Ç–Ω–∏–∫), –∑–∞—Ç–µ–º –∫–æ–Ω–µ—Ü —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class ChoiceLeaderPositionMarathonButton(disnake.ui.View):
    def __init__(self, timezone):
        super().__init__()
        self.timezone = timezone

    def get_successful_reg_embed(self, interaction: disnake.MessageInteraction):
        return disnake.Embed(
            title="–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –º–∞—Ä–∞—Ñ–æ–Ω–µ",
            description=f"–í–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –º—ã —Å–æ–∑–¥–∞–¥–∏–º —á–∞—Ç –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã. "
                        f"–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –º–∞—Ä–∞—Ñ–æ–Ω–∞ –≤ {interaction.guild.get_channel(PRACTISE_CHAT_ID).mention}."
                        f" –ù–∞–ø–∏—à–∏—Ç–µ –æ —Ü–µ–ª—è—Ö –Ω–∞ –º–∞—Ä–∞—Ñ–æ–Ω –∏ –ø–æ–æ–±—â–∞–π—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –≤ "
                        f"{interaction.guild.get_channel(MAIN_COMMUNICATION_MARATHON_CHAT_ID).mention}",
            color=0x7aefb0
        )

    @disnake.ui.button(label="–•–æ—á—É –±—ã—Ç—å –ª–∏–¥–µ—Ä–æ–º –∫–æ–º–∞–Ω–¥—ã", style=disnake.ButtonStyle.green, emoji="üë®‚Äçüè´")
    async def leader_button(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        execute_query(f"INSERT INTO users (name, team_id, timezone, is_leader) "
                      f"VALUES (\"{interaction.author.name}\", -1, {self.timezone}, 1);")
        await give_role(interaction)

        await interaction.response.edit_message("", view=None, embed=self.get_successful_reg_embed(interaction))
        self.stop()

    @disnake.ui.button(label="–•–æ—á—É –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–æ–º–∞–Ω–¥—ã", style=disnake.ButtonStyle.green, emoji="üôç‚Äç‚ôÇÔ∏è")
    async def member_button(self, button: disnake.ui.Button, interaction: disnake.MessageInteraction):
        execute_query(f"INSERT INTO users (name, team_id, timezone, is_leader) "
                      f"VALUES (\"{interaction.author.name}\", -1, {self.timezone}, 0);")
        await give_role(interaction)

        await interaction.response.edit_message("", view=None, embed=self.get_successful_reg_embed(interaction))
        self.stop()


def setup(bot):
    bot.add_cog(Marathon(bot))
